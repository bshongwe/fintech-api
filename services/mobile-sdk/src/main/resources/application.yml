# Mobile SDK Service Configuration

server:
  port: 8085
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  http2:
    enabled: true

spring:
  application:
    name: mobile-sdk-service
  
  profiles:
    active: development
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${MOBILE_DB_NAME:fintech_mobile}
    username: ${DB_USERNAME:fintech}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 2
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: mobile-sdk-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.fintech.*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
  
  cache:
    type: redis
    redis:
      time-to-live: 30m
      cache-null-values: false
  
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8082/oauth2/jwks

# Application Configuration
app:
  version: 1.0.0
  mobile:
    base-url: http://localhost:8085
    cors:
      allowed-origins: http://localhost:3000,https://mobile.fintech.com
    public-endpoints: /api/v1/mobile/auth/devices/register,/api/v1/mobile/auth/authenticate
    session-duration-minutes: 480
    refresh-token-duration-days: 30
    max-devices-per-user: 5
    device-cleanup-days: 90
    risk-threshold: 7.0
    batch-size: 100
    retry-attempts: 3
    async:
      core-pool-size: 5
      max-pool-size: 20
      queue-capacity: 100
  
  push:
    fcm:
      server-key: ${FCM_SERVER_KEY:your-fcm-server-key}
      url: https://fcm.googleapis.com/fcm/send
    apns:
      certificate-path: ${APNS_CERTIFICATE_PATH:/path/to/apns/certificate.p12}
      environment: ${APNS_ENVIRONMENT:sandbox}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: mobile-sdk-service
      environment: ${spring.profiles.active}

# Logging Configuration
logging:
  level:
    com.fintech.mobilesdk: INFO
    org.springframework.security: INFO
    org.springframework.kafka: INFO
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/mobile-sdk-service.log
    max-size: 100MB
    max-history: 30

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    display-request-duration: true

---
# Development Profile
spring:
  config:
    activate:
      on-profile: development
  jpa:
    show-sql: true
  flyway:
    clean-disabled: false

logging:
  level:
    com.fintech.mobilesdk: DEBUG
    org.springframework.security: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: production
  
  datasource:
    url: ${DB_URL:jdbc:postgresql://postgres:5432/mobilesdk_db}
    username: ${DB_USERNAME:mobilesdk_user}
    password: ${DB_PASSWORD}
  
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
  
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:kafka:9092}

app:
  mobile:
    base-url: ${API_BASE_URL:https://api.fintech.com}

logging:
  level:
    com.fintech.mobilesdk: INFO
    org.springframework: WARN
    root: WARN
