apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fintech-api-ingress
  namespace: fintech-system
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-rps: "10"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.fintech.com, https://admin.fintech.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-max-age: "1728000"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:;" always;
    
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "ewma"
    
    # Custom error pages
    nginx.ingress.kubernetes.io/custom-http-errors: "404,503"
    nginx.ingress.kubernetes.io/default-backend: "fintech-error-pages"
    
    # Cert-manager for automatic SSL
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.fintech.com
    - api.fintech.local
    secretName: fintech-api-tls
  rules:
  - host: api.fintech.com
    http:
      paths:
      # Authentication service
      - path: /api/v1/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8080
              
      # Account service
      - path: /api/v1/account
        pathType: Prefix
        backend:
          service:
            name: account-service
            port:
              number: 8080
              
      # Payment service
      - path: /api/v1/payments
        pathType: Prefix
        backend:
          service:
            name: payment-service
            port:
              number: 8080
              
      # Fraud detection service
      - path: /api/v1/fraud
        pathType: Prefix
        backend:
          service:
            name: fraud-detection-service
            port:
              number: 8080
              
      # Compliance service
      - path: /api/v1/compliance
        pathType: Prefix
        backend:
          service:
            name: compliance-service
            port:
              number: 8080
              
      # Reporting service
      - path: /api/v1/reports
        pathType: Prefix
        backend:
          service:
            name: reporting-service
            port:
              number: 8080
              
      # Admin dashboard
      - path: /api/v1/admin
        pathType: Prefix
        backend:
          service:
            name: admin-dashboard
            port:
              number: 8080
              
      # Mobile SDK
      - path: /api/v1/mobile
        pathType: Prefix
        backend:
          service:
            name: mobile-sdk
            port:
              number: 8080
              
      # Ledger service
      - path: /api/v1/ledger
        pathType: Prefix
        backend:
          service:
            name: ledger-service
            port:
              number: 8080
              
      # Notification service
      - path: /api/v1/notifications
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8080
              
      # Documentation and static content
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8080
              
      # Health checks (internal only)
      - path: /actuator
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8080
              
  - host: api.fintech.local
    http:
      paths:
      # Same configuration as production for local testing
      - path: /api/v1/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8080
      - path: /api/v1/account
        pathType: Prefix
        backend:
          service:
            name: account-service
            port:
              number: 8080
      - path: /api/v1/payments
        pathType: Prefix
        backend:
          service:
            name: payment-service
            port:
              number: 8080
      - path: /api/v1/fraud
        pathType: Prefix
        backend:
          service:
            name: fraud-detection-service
            port:
              number: 8080
      - path: /api/v1/compliance
        pathType: Prefix
        backend:
          service:
            name: compliance-service
            port:
              number: 8080
      - path: /api/v1/reports
        pathType: Prefix
        backend:
          service:
            name: reporting-service
            port:
              number: 8080
      - path: /api/v1/admin
        pathType: Prefix
        backend:
          service:
            name: admin-dashboard
            port:
              number: 8080
      - path: /api/v1/mobile
        pathType: Prefix
        backend:
          service:
            name: mobile-sdk
            port:
              number: 8080
      - path: /api/v1/ledger
        pathType: Prefix
        backend:
          service:
            name: ledger-service
            port:
              number: 8080
      - path: /api/v1/notifications
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8080

---
# Rate limiting configuration for specific endpoints
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fintech-auth-ingress
  namespace: fintech-system
  annotations:
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-rps: "2"
    nginx.ingress.kubernetes.io/limit-connections: "5"
spec:
  ingressClassName: nginx
  rules:
  - host: api.fintech.com
    http:
      paths:
      - path: /api/v1/auth/login
        pathType: Exact
        backend:
          service:
            name: auth-service
            port:
              number: 8080
      - path: /api/v1/auth/register
        pathType: Exact
        backend:
          service:
            name: auth-service
            port:
              number: 8080

---
# Payment endpoint with stricter limits
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fintech-payment-ingress
  namespace: fintech-system
  annotations:
    nginx.ingress.kubernetes.io/rate-limit: "20"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-rps: "5"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
spec:
  ingressClassName: nginx
  rules:
  - host: api.fintech.com
    http:
      paths:
      - path: /api/v1/payments/initiate
        pathType: Exact
        backend:
          service:
            name: payment-service
            port:
              number: 8080

---
# Admin endpoints with IP whitelist
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fintech-admin-ingress
  namespace: fintech-system
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  ingressClassName: nginx
  rules:
  - host: api.fintech.com
    http:
      paths:
      - path: /api/v1/admin
        pathType: Prefix
        backend:
          service:
            name: admin-dashboard
            port:
              number: 8080

---
# Error pages service
apiVersion: v1
kind: ConfigMap
metadata:
  name: fintech-error-pages
  namespace: fintech-system
data:
  404.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Fintech API - Not Found</title>
        <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
            h1 { color: #333; }
            p { color: #666; }
        </style>
    </head>
    <body>
        <h1>404 - Not Found</h1>
        <p>The requested resource was not found.</p>
        <p>Please check the API documentation for valid endpoints.</p>
    </body>
    </html>
  503.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Fintech API - Service Unavailable</title>
        <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
            h1 { color: #d9534f; }
            p { color: #666; }
        </style>
    </head>
    <body>
        <h1>503 - Service Temporarily Unavailable</h1>
        <p>The service is currently under maintenance or experiencing high load.</p>
        <p>Please try again later.</p>
    </body>
    </html>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fintech-error-pages
  namespace: fintech-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fintech-error-pages
  template:
    metadata:
      labels:
        app: fintech-error-pages
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: error-pages
          mountPath: /usr/share/nginx/html
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 10m
            memory: 16Mi
      volumes:
      - name: error-pages
        configMap:
          name: fintech-error-pages

---
apiVersion: v1
kind: Service
metadata:
  name: fintech-error-pages
  namespace: fintech-system
spec:
  selector:
    app: fintech-error-pages
  ports:
  - port: 80
    targetPort: 80
